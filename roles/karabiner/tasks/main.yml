---
- name: Install Karabiner Elements
  homebrew_cask:
    name: karabiner-elements

- name: Create Karabiner config directory
  file:
    path: "{{ config }}/karabiner"
    state: directory
    mode: '0755'

- name: Check if existing config exists
  stat: 
    path: "{{ config }}/karabiner/karabiner.json"
  register: karabiner_config_stat

- name: Backup existing config
  command: "mv {{ config }}/karabiner/karabiner.json {{ config }}/karabiner/karabiner.json.backup"
  when: karabiner_config_stat.stat.exists

- name: Install Karabiner configuration
  copy:
    src: "karabiner.json"
    dest: "{{ config }}/karabiner/karabiner.json"
    mode: '0644'
  notify: restart karabiner

- name: Ensure Karabiner Elements is running
  command: pgrep -f "Karabiner-Elements"
  register: karabiner_running
  failed_when: false
  changed_when: false

- name: Start Karabiner Elements if not running
  command: open -a "Karabiner-Elements"
  when: karabiner_running.rc != 0

- name: Verify configuration is properly loaded
  pause:
    seconds: 3
    prompt: "Waiting for Karabiner to load configuration..."

- name: Check if configuration matches expected content
  shell: |
    if ! grep -q "basic.to_if_alone_timeout_milliseconds" "{{ config }}/karabiner/karabiner.json" 2>/dev/null; then
      echo "Configuration missing timing parameters - needs restoration"
      exit 1
    fi
  register: config_check
  failed_when: false
  changed_when: config_check.rc != 0

- name: Force configuration restoration if corrupted
  copy:
    src: "karabiner.json"
    dest: "{{ config }}/karabiner/karabiner.json"
    mode: '0644'
    force: yes
  notify: restart karabiner
  when: config_check.rc != 0